@using CharHammer.Components.Aptitude
@using CharHammer.Helpers
@code {
    [Parameter] public int NbColonnes { get; set; }
    [Parameter, EditorRequired] public AptitudeDto[] Traits { get; set; } = null!;

    IEnumerable<AptitudeDto>[] _splitedTraits = null!;
    int _firstColCount;
    int _lastColCount;

    protected override void OnParametersSet()
    {
        _splitedTraits = Traits.SplitOnMaxSlices(NbColonnes).ToArray();
        _firstColCount = _splitedTraits.First().Count();
        _lastColCount = _splitedTraits.Last().Count();
    }
}
<table>
    <tbody>
        @for (var iRow = 0; iRow < _firstColCount; iRow++)
        {
            <tr>
                @for (var iCol = 0; iCol < _splitedTraits.Length; iCol++)
                {
                    @if (iCol != _splitedTraits.Length - 1 || iRow < _lastColCount)
                    {
                        <td><AptitudeItem Item=@_splitedTraits[iCol].ElementAt(iRow) /></td>
                    }
                }
            </tr>
        }
    </tbody>
</table>
