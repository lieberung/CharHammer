@page "/maitre-du-jeu/{CampagneId}/{DateSeance}/"

@using CharHammer.Components.Aptitude
@using CharHammer.Components.Bestiole
@using CharHammer.Components.Campagne

@inject CampagnesService Service
@inject AppState AppState
@code {
    [Parameter, EditorRequired] public string CampagneId { get; set; } = null!;
    [Parameter, EditorRequired] public string DateSeance { get; set; } = null!;

    RencontreDto? Rencontre { get; set; }
    SeanceDto _seance = null!;
    IEnumerable<AptitudeDto> _aptitudes = null!;
    IEnumerable<CombattantDto> _combattants = [];
    string _localisationRoll = "...";

    protected override void OnParametersSet()
    {
        var campagne = Service.AllCampagnes.First(c => c.Id == int.Parse(CampagneId));
        _seance = DateSeance switch
        {
            "seance-actuelle" => campagne.SeanceActuelle(),
            "seance-precedente" => campagne.SeancePrecedente(),
            _ => Service.GetSeance(int.Parse(CampagneId), DateSeance)
        };

        AppState.SetMainTopRowTitle(_seance.Quand + " - " + _seance.Titre);

        _aptitudes = _seance.Pjs
            .SelectMany(pj => pj.AptitudesAcquises.Select(aa => aa.Aptitude))
            .Distinct()
            .OrderBy(a => a.NomComplet);
    }

    void CalculerInitiativeDeCombatPjsUniquement() => CalculerInitiativeDeCombat(null);
    void CalculerInitiativeDeCombat(RencontreDto? rencontre)
    {
        Rencontre = rencontre;

        var protagonistes = _seance.Pjs
            .Select(pj => new CombattantDto(Combattant: pj, Nom: pj.Nom, false))
            .Union(Rencontre is not null ? Rencontre.Allies.Union(Rencontre.Ennemis) : []);

        _combattants = BestiolesService.InitiativeDeCombat(protagonistes);
    }

    void JetDeLocalisation()
    {
        var d100 = GenericService.RollDice(100);
        _localisationRoll = GenericService.GetLocalisation(d100);
    }
}
<div class="row">
    <div class="col-6">
        <div class="section rounded-2 bg-white">
            <h3>Aptitudes du groupe</h3>
            <AptitudeItemListSummary Aptitudes=@_aptitudes CompetencesAvanceesUniquement=true />
        </div>
    </div>
</div>

@if (AppState.JeSuisDieu)
{
    <div class="row">
        <div class="col-8">
            <div class="section">
                <h3>Assistant de combat</h3>
                <p class="text-justify">
                    <button class="btn btn-primary" @onclick="CalculerInitiativeDeCombatPjsUniquement">Initiative de combat</button>
                    @foreach (var rencontre in _seance.Rencontres)
                    {
                        <button class="btn btn-secondary ms-3" @onclick="() => CalculerInitiativeDeCombat(rencontre)">@rencontre.Groupe</button>
                    }
                </p>
            </div>
        </div>
        <div class="col-4">
            <div class="section">
                <h5>Localisation</h5>
                <p class="text-justify">
                    <button class="btn btn-secondary" @onclick="JetDeLocalisation">Roll !</button>
                    <span class="insister ms-2">@_localisationRoll</span>
                </p>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            @if (_combattants.Any())
            {
                <AssistantBataille Protagonistes=@_combattants />
            }
        </div>
    </div>
}

<PageSectionDivider />

<BestioleFicheRows Items=@_seance.Pjs />
