@page "/guide-du-consommateur/{Groupe}/"

@using BlazorWjdr.Components.Equipement
@using BlazorWjdr.Components.Regle
@using BlazorWjdr.Components.Table
@using BlazorWjdr.Models
@using BlazorWjdr.Services

@inject ArmesService _armesService
@inject TablesService _tablesService

<MainTopRow Title="Guide du Consommateur"/>

<div class="container-fluid">

    <div class="ml-3 mb-3 pl-2">
        <div class="row">
            <div class="col-1"></div>
            <div class="col-10">
                <a style="width:120px;" href="guide-du-consommateur/tout/" class="mr-2 mb-1 btn btn-sm @(Clean(Groupe) == "tout" ? "btn-primary" : "btn-secondary")">
                    <span style="color:white;" class="oi oi-box item-icon mr-1" aria-hidden="true"></span>
                    <strong>Tout</strong>
                </a>
                @foreach (var grp in _allGroupes)
                {
                    <a style="width:120px;" href="guide-du-consommateur/@Clean(grp)/" class="mr-2 mb-1 btn btn-sm @(Clean(Groupe) == Clean(grp) ? "btn-primary" : "btn-secondary")">@grp</a>
                }
            </div>
            <div class="col-1"></div>
        </div>
    </div>

    <div class="ml-3 mb-3 pl-2">
        @foreach (var grp in _showGroupes)
        {
            <div class="row">
                <div class="col-5">
                    <h3 class="card-title">@grp</h3>
                    <TableEquipements Items="@GetEquipement(grp)" AfficherContenance="@(grp == "contenants")"/>
                </div>
                @if (_showGroupes.Count == 1)
                {
                    <div class="col-1"></div>
                    <div class="col-4">
                        <div class="card-body">
                            <TableDetail Item="@_tablesService.GetTable(86)"/>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
    
    @if (_showGroupes.Count == 1)
    {
        <RowEncombrement/>
    }
</div>

@code {
    [Parameter] public string Groupe { get; set; } = "";

    private List<string> _allGroupes = null!;
    private List<string> _showGroupes = null!;

    private static string Clean(string s) => GenericService.GetUrlChunck(s);

    private EquipementDto[] GetEquipement(string groupe)
    {
        var cleanGroupe = Clean(groupe);
        return _armesService.AllEquipements
            .Where(e => e.Groupes.Any(g => Clean(g) == cleanGroupe))
            .OrderBy(e => e.Nom).ToArray();
    }

    protected override void OnParametersSet()
    {
        _allGroupes = _armesService.AllEquipements.SelectMany(e => e.Groupes).Distinct().OrderBy(g => g).ToList();
        _showGroupes = Groupe == "tout" ? _allGroupes : new List<string> { Groupe };

        base.OnParametersSet();
    }
}