@page "/equipement/armes-liste/{Groupe}/{Filtre}/"

@using BlazorWjdr.Components.Arme
@using BlazorWjdr.Models
@using BlazorWjdr.Services
@using System.Diagnostics.Contracts

@inject ArmesService _armesService
@inject CompetencesEtTalentsService _competencesEtTalentsService

<MainTopRow>
    <span class="title-primary top-row-title">Armes</span>
    <span style="margin-left: 160px;">
        <a style="width:120px; margin-top:-10px;" href="/equipement/armes-liste/@Groupe/toutes/" class="mr-2 btn btn-sm @(Filtre == "toutes" ? "btn-primary" : "btn-secondary")">Toutes</a>
        <a style="width:120px; margin-top:-10px;" href="/equipement/armes-liste/@Groupe/corps-a-corps/" class="mr-2 btn btn-sm @(Filtre == "corps-a-corps" ? "btn-primary" : "btn-secondary")">Corps à corps</a>
        <a style="width:120px; margin-top:-10px;" href="/equipement/armes-liste/@Groupe/tir/" class="mr-2 btn btn-sm @(Filtre == "tir" ? "btn-primary" : "btn-secondary")">Tir</a>
    </span>
</MainTopRow>

<div class="content px-4">

    <div class="ml-3 mb-3 pl-2">
        <div class="row">
            <div class="col-1">
                <a href="/equipement/armes-liste/toutes/@Filtre/" class="mb-1 mr-1 btn btn-sm @(Groupe == "toutes" ? "btn-primary" : "btn-secondary")">Toutes</a>
            </div>
            <div class="col-11">
                @foreach (var groupeDArmes in _armesService.AllGroupesDArmes)
                {
                    var groupeDArme = GetGroupe(groupeDArmes.Nom);
                    <a href="/equipement/armes-liste/@groupeDArme/@Filtre/" class="mb-1 mr-1 btn btn-sm @(Groupe == groupeDArme ? "btn-primary" : "btn-secondary")">@groupeDArmes.Nom</a>
                }
            </div>
        </div>
    </div>

    @if (_armesLines.Any(a => a.EstUneArmeDeCaC))
    {
        <table class="table">
            <thead>
            <tr>
                <td>Arme de corps à corps</td>
                <td>Groupes</td>
                <td>Maîtrise</td>
                <td>Attributs</td>
                <td>Dégâts</td>
                <td>Enc.</td>
                <td>Prix</td>
                <td>Disponibilité</td>
            </tr>
            </thead>
            <tbody>
            @foreach (var arme in _armesLines.Where(a => a.EstUneArmeDeCaC))
            {
                <ArmeRow Item="arme"/>
            }
            </tbody>
        </table>
    }
    @if (_armesLines.Any(a => a.EstUneArmeDeTir))
    {
        <table class="table">
            <thead>
            <tr>
                <td>Armes à distance</td>
                <td>Groupes</td>
                <td>Maîtrise</td>
                <td>Attributs</td>
                <td>Dégâts</td>
                <td>Portée</td>
                <td>Rechargement</td>
                <td>Enc.</td>
                <td>Prix</td>
                <td>Disponibilité</td>
            </tr>
            </thead>
            <tbody>
            @foreach (var arme in _armesLines.Where(a => a.EstUneArmeDeTir))
            {
                <ArmeRow Item="arme"/>
            }
            </tbody>
        </table>
    }
    
    @if (GroupeActuel != null)
    {
        <div class="row">
            <div class="col">
                <CardParagraphes Text="@GroupeActuel.Description" />
            </div>
        </div>
    }


</div>
@code {

    [Parameter]
    public string Groupe { get; set; } = "";
    [Parameter]
    public string Filtre { get; set; } = "";

    private ArmeAttributDto? GroupeActuel { get; set; }

    private List<ArmeDto> _armesLines = null!;

    private string GetGroupe(string specialisation)
    {
        return GenericService.ConvertirCaracteres(specialisation).Replace(" ", "-");
    }

    protected override async Task OnParametersSetAsync()
    {
        var armes = await _armesService.Items();

        if (Groupe != "toutes")
        {
            GroupeActuel = _armesService.AllGroupesDArmes.Single(g => GetGroupe(g.Nom) == Groupe);
            _armesLines = armes.Where(a => a.Groupes.Contains(GroupeActuel)).ToList();
        }
        else
        {
            GroupeActuel = null;
            _armesLines = armes.ToList();
        }

        if (Filtre == "corps-a-corps")
            _armesLines.RemoveAll(a => a.EstUneArmeDeTir);
        if (Filtre == "tir")
            _armesLines.RemoveAll(a => a.EstUneArmeDeCaC);

    }
}
