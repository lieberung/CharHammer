@page "/todo"

@using BlazorWjdr.Components.Carriere
@using BlazorWjdr.Components.Aptitude

@inject CarrieresService _cs
@inject AptitudesService _as
@inject AppState _appState
@code {
    protected override void OnInitialized()
    {
        _appState.SetMainTopRowTitle("Au travail !");
    }
}
<div class="row">
    <div class="col-1"></div>
    <div class="col-10">
        <h4>Carrières sans Description</h4>
        <CarriereItemList Items=@_cs.AllCarrieres.Where(c => string.IsNullOrWhiteSpace(c.Description)) />
        <h4>Carrières de base sans Vocation/Groupe</h4>
        <CarriereItemList Items=@_cs.AllCarrieres.Where(c => c.EstUneCarriereDeBase && string.IsNullOrWhiteSpace(c.Groupe)) />
        <h4>Carrières sans Statut</h4>
        <CarriereItemList Items=@_cs.AllCarrieres.Where(c => string.IsNullOrWhiteSpace(c.Statut)) />
        <h4>Carrières de base sans Métier</h4>
        <CarriereItemList Items=@_cs.AllCarrieres.Where(c => c.EstUneCarriereDeBase && c.CompetenceDeMetier is null) />
        <h4>Carrières de base sans Ambiance</h4>
        <CarriereItemList Items=@_cs.AllCarrieres.Where(c => c.EstUneCarriereDeBase && !c.Ambiance.Any()) />

        <h4>Aptitudes sans description</h4>
        <AptitudeItemList Items=@_as.AllAptitudes.Where(a => string.IsNullOrWhiteSpace(a.Description)) />
        <h4>Compétences et Talents sans carrières</h4>
        <AptitudeItemList Items=@_as.AllAptitudes.Where(a => (a.EstUneCompetence || a.EstUnTalent) && !_cs.AllCarrieres.Any(c => c.Aptitudes.Contains(a))) />
        <h4>Aptitudes ou resume = description</h4>
        <AptitudeItemList Items=@_as.AllAptitudes.Where(a => a.Resume != "" && a.Resume == a.Description) />
    </div>
    <div class="col-1"></div>
</div>
