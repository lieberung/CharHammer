@page "/maitre-du-jeu/{CampagneId}/{DateSeance}/"

@using BlazorWjdr.Components.Aptitude
@using BlazorWjdr.Components.Bestiole
@using BlazorWjdr.Components.Campagne

@inject CampagnesService _campagnesService
@inject AppState _appState
@code {
    [Parameter, EditorRequired] public string CampagneId { get; set; } = null!;
    [Parameter, EditorRequired] public string DateSeance { get; set; } = null!;

    private RencontreDto? Rencontre { get; set; }
    private SeanceDto _seance = null!;
    private AptitudeDto[] _aptitudes = null!;
    private List<CombattantDto> _combattants = new();
    private string _localisationRoll = "...";

    protected override void OnParametersSet()
    {
        var campagne = _campagnesService.AllCampagnes().First(c => c.Id == int.Parse(CampagneId));
        if (DateSeance == "seance-actuelle")
            _seance = campagne.SeanceActuelle();
        else if (DateSeance == "seance-precedente")
            _seance = campagne.SeancePrecedente();
        else
            _seance = _campagnesService.GetSeance(int.Parse(CampagneId), DateSeance);

        _appState.SetMainTopRowTitle(_seance.Quand + " - " + _seance.Titre);

        _aptitudes = _seance.Pjs
            .SelectMany(pj => pj.AptitudesAcquises.Select(aa => aa.Aptitude))
            .Distinct()
            .OrderBy(a => a.NomComplet).ToArray();
    }

    private void CalculerInitiativeDeCombatPjsUniquement() => CalculerInitiativeDeCombat(null);
    private void CalculerInitiativeDeCombat(RencontreDto? rencontre)
    {
        Rencontre = rencontre;

        var protagonistes = _seance.Pjs.Select(pj => new CombattantDto { Combattant = pj, Nom = pj.Nom }).ToList();
        if (Rencontre != null)
        {
            protagonistes.AddRange(Rencontre.Allies);
            protagonistes.AddRange(Rencontre.Ennemis);
        }

        _combattants = BestiolesService.InitiativeDeCombat(protagonistes).ToList();
    }

    private void JetDeLocalisation()
    {
        var d100 = GenericService.RollDice(100);
        _localisationRoll = GenericService.GetLocalisation(d100);
    }
}
<div class="row">
    <div class="col-6">
        <div class="card">
            <div class="card-body">
                <h3>Aptitudes du groupe</h3>
                <AptitudeItemListSummary Aptitudes=@_aptitudes CompetencesAvanceesUniquement=true />
            </div>
        </div>
    </div>
</div>

    @if (_appState.JeSuisDieu)
{
    <div class="row">
        <div class="col-8">
            <div class="card-body">
                <h3>Assistant de combat</h3>
                <p class="card-text">
                    <button class="btn btn-primary" @onclick="CalculerInitiativeDeCombatPjsUniquement">Initiative de combat</button>
                    @foreach (var rencontre in _seance.Rencontres)
                    {
                        <button class="btn btn-secondary ms-3" @onclick="() => CalculerInitiativeDeCombat(rencontre)">@rencontre.Groupe</button>
                    }
                </p>
            </div>
        </div>
        <div class="col-4">
            <div class="card-body">
                <h5>Localisation</h5>
                <p class="card-text">
                    <button class="btn btn-secondary" @onclick="JetDeLocalisation">Roll !</button>
                    <span class="insister ms-2">@_localisationRoll</span>
                </p>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            @if (_combattants.Any())
            {
                <AssistantBataille Protagonistes=@_combattants.ToArray() />
            }
        </div>
    </div>
}

<PageSectionDivider />

<BestioleFicheRows Items=@_seance.Pjs />
