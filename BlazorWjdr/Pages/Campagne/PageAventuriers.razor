@page "/aventuriers/{CampagneId}/{DateSeance}/"

@using BlazorWjdr.Components.Aptitude
@using BlazorWjdr.Components.Bestiole
@using BlazorWjdr.Models
@using BlazorWjdr.Services

@inject CampagnesService _campagnesService

<MainTopRow Title="@_topRowTitle"/>

<div class="content px-4">
    
    <div class="row">
        <div class="col-6">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">Aptitudes du groupe</h3>
                    <AptitudeItemListSummary Aptitudes="_aptitudes" CompetencesAvanceesUniquement="@true"/>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-8">
            <div class="card-body">
                <h3 class="card-title">Assistant de combat</h3>
                @if (!_unlocked)
                {
                    <span class="oi oi-lock-unlocked theme-color mr-3" style="font-size: 1.7rem;" aria-hidden="true"></span>
                    <input placeholder="Password" @onchange="OnPasswordChange" />
                }
                @if (_unlocked)
                {
                    <p class="card-text">
                        <button class="btn btn-primary" @onclick="CalculerInitiativeDeCombatPjsUniquement">Initiative de combat</button>
                        @foreach (var rencontre in _seance.Rencontres)
                        {
                            <button class="btn btn-secondary ml-3" @onclick="() => CalculerInitiativeDeCombat(rencontre)">@rencontre.Groupe</button>
                        }
                    </p>
                }
            </div>
        </div>
        <div class="col-4">
            <div class="card-body">
                <h5 class="card-title">Localisation</h5>
                <p class="card-text">
                    <button class="btn btn-secondary" @onclick="JetDeLocalisation">Roll !</button>
                    <span class="insister ml-2">@_localisationRoll</span>
                </p>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
        @if (_combattants.Any())
        {
            <table class="table">
                <thead>
                <tr>
                    <th class="tgroupe"></th>
                    <th class="tgroupe pl-2">Combattant</th>
                    <th class="tgroupe pl-2" style="text-align:center;">CC</th>
                    <th class="tgroupe pl-2" style="text-align:center;">BF</th>
                    <th class="tgroupe pl-2" style="text-align:center;">BE</th>
                    <th class="tgroupe pl-2">Avantage</th>
                    <th class="tgroupe pl-2">Blessures</th>
                    <th class="tgroupe pl-2">Aptitudes</th>
                </tr>
                </thead>
                <tbody class="alternate-color-dark">
                @foreach (var combattant in _combattants)
                {
                    <CombattantRow Item="@combattant" Ennemi="@Rencontre!.Pnjs.Contains(combattant.Combattant)"/>
                }
                </tbody>
            </table>
        }
        </div>
    </div>
    
    <PageSectionDivider/>
    
    @if (_seance.Pjs.Length > 0)
    {
        <div class="row mt-3">
            <div class="col-6">
                <BestioleFicheCard Bestiole="@_seance.Pjs[0]"/>
            </div>
            <div class="col-6">
                @if (_seance.Pjs.Length > 1)
                {
                    <BestioleFicheCard Bestiole="@_seance.Pjs[1]"/>
                }
            </div>
        </div>
    }
    @if (_seance.Pjs.Length > 2)
    {
        <div class="row mt-3">
            <div class="col-6">
                <BestioleFicheCard Bestiole="@_seance.Pjs[2]"/>
            </div>
            <div class="col-6">
                @if (_seance.Pjs.Length > 3)
                {
                    <BestioleFicheCard Bestiole="@_seance.Pjs[3]"/>
                }
            </div>
        </div>
    }
    @if (_seance.Pjs.Length > 4)
    {
        <div class="row mt-3">
            <div class="col-6">
                <BestioleFicheCard Bestiole="@_seance.Pjs[4]"/>
            </div>
            <div class="col-6">
                @if (_seance.Pjs.Length > 5)
                {
                    <BestioleFicheCard Bestiole="@_seance.Pjs[5]"/>
                }
            </div>
        </div>
    }
    @if (_seance.Pjs.Length > 6)
    {
        <div class="row mt-3">
            <div class="col-6">
                <BestioleFicheCard Bestiole="@_seance.Pjs[6]"/>
            </div>
            <div class="col-6">
                @if (_seance.Pjs.Length > 7)
                {
                    <BestioleFicheCard Bestiole="@_seance.Pjs[7]"/>
                }
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public string CampagneId { get; set; } = null!;
    [Parameter] public string DateSeance { get; set; } = null!;
    
    private RencontreDto? Rencontre { get; set; }
    private SeanceDto _seance = null!;
    private AptitudeDto[] _aptitudes = null!;
    private List<CombattantDto> _combattants = new();
    private string _topRowTitle = "";
    private string _localisationRoll = "...";
    private bool _unlocked;
    
    protected override void OnParametersSet()
    {
        _seance = _campagnesService.GetSeance(int.Parse(CampagneId), DateSeance);
        _topRowTitle = _seance.Quand + " - " + _seance.Titre;
        
        _aptitudes = _seance.Pjs
            .SelectMany(pj => pj.AptitudesAcquises.Select(aa => aa.Aptitude))
            .Distinct()
            .OrderBy(a => a.NomComplet).ToArray();
        
        base.OnParametersSet();
    }

    private void CalculerInitiativeDeCombatPjsUniquement() => CalculerInitiativeDeCombat(null);
    private void CalculerInitiativeDeCombat(RencontreDto? rencontre)
    {
        Rencontre = rencontre;

        var protagonistes = _seance.Pjs.ToList();
        if (Rencontre != null)
            protagonistes.AddRange(Rencontre.Pnjs);

        _combattants = BestiolesService.InitiativeDeCombat(protagonistes).ToList();
    }

    private void JetDeLocalisation()
    {
        var d100 = GenericService.RollDice(100);
        _localisationRoll = GenericService.GetLocalisation(d100);
    }
    
    private void OnPasswordChange(ChangeEventArgs args)
    {
        _unlocked = GenericService.DieuEstDAccord(Convert.ToString(args.Value));
    }
}