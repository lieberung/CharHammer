@page "/univers/pantheon/{Dieu}/"

@using BlazorWjdr.Components.Aptitude
@using BlazorWjdr.Components.Dieu
@using BlazorWjdr.Components.Sortilege
@using BlazorWjdr.Models
@using BlazorWjdr.Services

@inject DieuxService _dieuxSvc
@inject AptitudesService _aptitudesService
@inject SortilegesService _sortilegesService

<MainTopRow Title="@_dieu.Nom"/>

<div class="content px-4">
    
    <div class="row">
        
        <div class="col-5">
            <h3 class="card-title">Le Culte de @_dieu.Nom</h3>
            <CardBody Titre="" Image="@("images/dieux/" + _dieu.Id + ".png")">
                <ul>
                    <li><strong>Domaines :</strong> @_dieu.Domaines</li>
                    <li><strong>Symboles :</strong> @_dieu.Symboles</li>
                    <li><strong>Siège :</strong> @_dieuSiege</li>
                    <li><strong>Chef du culte :</strong> @_dieu.Chef</li>
                    <li><strong>Fêtes religieuses :</strong> @_dieu.Fetes</li>
                    <li><strong>Livres saints :</strong> @_dieu.LivresSaints</li>
                    <li><strong>Fidèles :</strong> @_dieu.Fideles</li>
                </ul>
                <CardParagraphes Text="@_dieu.Intro"/>
            </CardBody>
        </div>
        
        <div class="col-7">
            <h3 class="card-title">Le Dogme</h3>
            <CardBody Titre="" Image="">
                <div class="bulle ml-4 px-4" style="float:right; width:500px;">
                    <h5 class="card-title">Commandements</h5>
                    <ul>
                        @foreach (var cmd in _dieu.Commandements)
                        {
                            <li>@cmd</li>
                        }
                    </ul>
                </div>

                <CardParagraphes Text="@_dieu.Dogme"/>
                
                <h4 class="card-title">Pénitences</h4>
                <p class="card-text">@_dieu.Penitences</p>
            </CardBody>
        </div>
        
    </div>

    <PageSectionDivider/>
    
    <div class="row">
        
        <div class="col-6">
            <h3 class="card-title">Le Culte</h3>
            <CardBody Titre="" Image="">
                <CardParagraphes Text="@_dieu.Culte"/>
            </CardBody>
        </div>
        
        <div class="col-6">
            <h3 class="card-title">Les Cultistes</h3>
            <CardBody Titre="" Image="">
                <CardParagraphes Text="@_dieu.Cultistes"/>
            </CardBody>
        </div>
        
    </div>
    
    <PageSectionDivider/>
    
    <div class="row">
        
        <div class="col-6">
            <h3 class="card-title">L'initiation</h3>
            <CardBody Titre="" Image="">
                @if (_dieu.Aptitudes.Inities.Any())
                {
                    <AptitudeItemList Items="@_dieu.Aptitudes.Inities.ToArray()"/>
                }
                <CardParagraphes Text="@_dieu.Initiation"/>
            </CardBody>
        </div>
        
        <div class="col-6">
            <h3 class="card-title">La prêtrise</h3>
            <CardBody Titre="" Image="">
                @if (_dieu.Aptitudes.PretesSansOrdre.Any())
                {
                    <AptitudeItemList Items="@_dieu.Aptitudes.PretesSansOrdre.ToArray()"/>
                }
                <CardParagraphes Text="@_dieu.Pretrise"/>
            </CardBody>
        </div>
        
    </div>
    
    <PageSectionDivider/>

    
    <div class="row">
        
        <div class="col-4">
            <h3 class="card-title">Structure</h3>
            <CardBody Titre="" Image="">
                <CardParagraphes Text="@_dieu.Structure"/>
            </CardBody>
        </div>
        
        <div class="col-4">
            <h3 class="card-title">Lieux de Culte</h3>
            @foreach (var temple in _dieu.Temples)
            {
                <CardBody Titre="@temple.Nom" Image="">
                    <CardParagraphes Text="@temple.Description"/>
                </CardBody>
            }
        </div>

        <div class="col-4">
            <h3 class="card-title">Personnalités</h3>
            @foreach (var perso in _dieu.Personnalites)
            {
                <CardBody Titre="@perso.Nom" Image="">
                    <CardParagraphes Text="@perso.Description"/>
                </CardBody>
            }
            <div class="card-body">
                <h4 class="card-title">Croyances populaires</h4>
                @foreach (var ambiance in _dieu.Ambiance)
                {
                    <p class="card-text">
                        <em class="p-2">@ambiance</em>
                    </p>
                }
            </div>
        </div>

    </div>
    
    <PageSectionDivider/>
    
    <div class="row">
        <div class="col-6">
            <h3 class="card-title">Les Ordres</h3>
            @foreach (var ordre in _dieu.Ordres)
            {
                <CulteDescription Culte="@ordre"/>
            }
            
        </div>
        
        <div class="col-6">
            <h3 class="card-title">Les Sectes</h3>
            <CardBody Titre="" Image="">
                @foreach (var secte in _dieu.Sectes)
                {
                    @if (!string.IsNullOrWhiteSpace(secte.Nom))
                    {
                        <h4 class="card-title">@secte.Nom</h4>
                    }
                    <CardParagraphes Text="@secte.Description"/>
                }
            </CardBody>
        </div>
    </div>
@if (_inspirationDivine != null)
{
    <PageSectionDivider/>

    <div class="row">
        <div class="col-6">
            <h3 class="card-title">Bénédictions</h3>
            @foreach (var benediction in  _sortilegesService.AllSortileges.Where(s => s.Type == "bénédiction" && s.Aptitudes.Contains(_inspirationDivine)))
            {
                <div class="bulle m-4 sortilege">
                    <div class="card-body">
                        <SortilegeDetail Item="@benediction"/>
                    </div>
                </div>
            }
        </div>
        <div class="col-6">
            <h3 class="card-title">Miracles</h3>
            @foreach (var miracle in  _sortilegesService.AllSortileges.Where(s => s.Type == "miracle" && s.Aptitudes.Contains(_inspirationDivine)))
            {
                <div class="bulle m-4 sortilege">
                    <div class="card-body">
                        <SortilegeDetail Item="@miracle"/>
                    </div>
                </div>
            }
        </div>
    </div>
}
</div>

@code {
    [Parameter] public string Dieu { get; set; } = null!;
    private DieuDto _dieu = null!;
    private string? _dieuSiege;
    private AptitudeDto? _inspirationDivine;
    
    protected override void OnParametersSet()
    {
        switch (Dieu)
        {
            case "manann":
                _dieu = _dieuxSvc.GetDieu(11);
                _inspirationDivine = _aptitudesService.InspirationDivineManann;
                break;
            case "morr":
                _dieu = _dieuxSvc.GetDieu(12);
                _inspirationDivine = _aptitudesService.InspirationDivineMorr;
                break;
            case "myrmidia":
                _dieu = _dieuxSvc.GetDieu(13);
                _inspirationDivine = _aptitudesService.InspirationDivineMyrmidia;
                break;
            case "ranald":
                _dieu = _dieuxSvc.GetDieu(14);
                _inspirationDivine = _aptitudesService.InspirationDivineRanald;
                break;
            case "rhya":
                _dieu = _dieuxSvc.GetDieu(15);
                _inspirationDivine = _aptitudesService.InspirationDivineRhya;
                break;
            case "shallya":
                _dieu = _dieuxSvc.GetDieu(16);
                _inspirationDivine = _aptitudesService.InspirationDivineShallya;
                break;
            case "sigmar":
                _dieu = _dieuxSvc.GetDieu(10);
                _inspirationDivine = _aptitudesService.InspirationDivineSigmar;
                break;
            case "taal":
                _dieu = _dieuxSvc.GetDieu(17);
                _inspirationDivine = _aptitudesService.InspirationDivineTaal;
                break;
            case "ulric":
                _dieu = _dieuxSvc.GetDieu(18);
                _inspirationDivine = _aptitudesService.InspirationDivineUlric;
                break;
            case "verena":
                _dieu = _dieuxSvc.GetDieu(19);
                _inspirationDivine = _aptitudesService.InspirationDivineVerena;
                break;
            case "khorne":
                _dieu = _dieuxSvc.GetDieu(20);
                _inspirationDivine = null;
                break;
            case "nurgle":
                _dieu = _dieuxSvc.GetDieu(21);
                _inspirationDivine = _aptitudesService.TalentSombreSavoirNurgle;
                break;
            case "slaanesh":
                _dieu = _dieuxSvc.GetDieu(22);
                _inspirationDivine = _aptitudesService.TalentSombreSavoirSlaanesh;
                break;
            case "tzeench":
                _dieu = _dieuxSvc.GetDieu(23);
                _inspirationDivine = _aptitudesService.TalentSombreSavoirTzeench;
                break;
            case "arianka":
                _dieu = _dieuxSvc.GetDieu(31);
                _inspirationDivine = null;
                break;
            case "khaine":
                _dieu = _dieuxSvc.GetDieu(24);
                _inspirationDivine = null;
                break;
            case "stromfels":
                _dieu = _dieuxSvc.GetDieu(25);
                _inspirationDivine = null;
                break;
            case "haendrik":
                _dieu = _dieuxSvc.GetDieu(26);
                _inspirationDivine = null;
                break;
            case "solkan":
                _dieu = _dieuxSvc.GetDieu(30);
                _inspirationDivine = null;
                break;
            case "illuminas":
                _dieu = _dieuxSvc.GetDieu(32);
                _inspirationDivine = null;
                break;
        }
        _dieuSiege = _dieu.Siege != null ? $"{_dieu.Siege!.Nom}, {_dieu.Siege.Parent!.Nom}" : "aucun.";
        
        base.OnParametersSet();
    }

}