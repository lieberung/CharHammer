



Recrue => Soldat		=> Joueur d'épée
Recrue => Soldat		=> Sergent
       => Marin
	   => Cavalier
	   
1 Recrue
2

        private static List<CarriereDto[]> InitializeCarrieresLignesDAvancement(Dictionary<int, CarriereDto> cacheCarrieres)
        {
            var all = cacheCarrieres.Values.Where(c => c.DebouchesDAvancements.Any())
                .ToArray();
            foreach (var root in all)
            {
                
            }
            
        }

        private static List<CarriereDto[]> GetLignes(CarriereDto root)
        {
            var list = new List<CarriereDto[]>();

            foreach (var d in root.DebouchesDAvancements)
            {
                
            }
            
            return list;
        }

        private static List<List<CarriereDto>> TousLesCheminsPartantDeRome(CarriereDto rome,
            List<List<CarriereDto>> tousLesCheminsMenantARome)
        {
            foreach (var chemin in tousLesCheminsMenantARome)
            {
                chemin.Add(rome);
            }

            var tousLesCheminsPassantParRome = new List<List<CarriereDto>>();
            foreach (var avancement in rome.DebouchesDAvancements)
            {
                var nouveauCheminPassantParRome = new List<CarriereDto>();
                //cheminPassantParRome
                    
                foreach (var cheminMenantDejaARome in tousLesCheminsMenantARome)
                {
                    nouveauCheminPassantParRome.AddRange(cheminMenantDejaARome);
                    
                    tousLesCheminsPassantParRome.Add();
                }
                    
                AjouterRomeATousLesCheminsQuiYMenent(avancement, tousLesCheminsMenantARome);
                
                tousLesCheminsPassantParRome.AddRange(tousLesCheminsMenantARome);
                
                tousLesCheminsPassantParRome.Add(new List<CarriereDto>());
            }

            var toutesLesChainesDepuisRoot = new List<List<CarriereDto>>();
            foreach (var avancement in root.DebouchesDAvancements)
            {
                var chaine = new List<CarriereDto> { root };
                toutesLesChainesDepuisRoot.Add(chaine);
                
                builder.Add(new List<CarriereDto>());
            }
            toutesLesChainesDepuisRoot.AddRange(ToutesLesChainesDepuisRoutes(avancement, toutesLesChainesDepuisRoot));
            
        }

        private static void AjouterRomeATousLesCheminsQuiYMenent(CarriereDto rome, List<List<CarriereDto>> tousLesCheminsMenantARome)
        {
            foreach (var chemin in tousLesCheminsMenantARome)
            {
                chemin.Add(rome);
            }
        }