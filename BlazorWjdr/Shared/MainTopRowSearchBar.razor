@using Microsoft.AspNetCore.Components
@using System.Net.Mime
@using BlazorWjdr.Components.Aptitude
@using BlazorWjdr.Components.Bestiole
@using BlazorWjdr.Components.Carriere
@using BlazorWjdr.Components.Lieu

<div class="btn-group" >
    <input class="dropdown-toggle rounded-4 py-1 px-3" @bind-value="_searchText" @bind-value:event="oninput" placeholder="Recherche..." />
    <span class="oi oi-magnifying-glass theme-color ms-1" aria-hidden="true" style="font-size: 1.3em; top: 0.5rem;"></span>
    @if (_searchText.Length > 2 && ResultFound)
    {
        <div class="dropdown-menu show p-2" style="top: 100%;" @onclick="ClearSearch">
            @if (FilteredCarrieres.Any())
            {
                <div class="mb-3">
                    <h6>Carrières</h6>
                    <CarriereItemList Items=@FilteredCarrieres />
                </div>
            }
            @if (FilteredAptitudes.Any(a => a.EstUneCompetence))
            {
                <div class="mb-3">
                    <h6>Compétences</h6>
                    <AptitudeItemList Items=@FilteredAptitudes.Where(a => a.EstUneCompetence).ToArray() PasDeTooltip=true />
                </div>
            }
            @if (FilteredAptitudes.Any(a => a.EstUnTalent))
            {
                <div class="mb-3">
                    <h6>Talents</h6>
                    <AptitudeItemList Items=@FilteredAptitudes.Where(a => a.EstUnTalent).ToArray() PasDeTooltip=true />
                </div>
            }
            @if (FilteredAptitudes.Any(a => a.EstUnTrait))
            {
                <div class="mb-3">
                    <h6>Traits</h6>
                    <AptitudeItemList Items=@FilteredAptitudes.Where(a => a.EstUnTrait).ToArray() PasDeTooltip=true />
                </div>
            }
            @if (FilteredBestioles.Any())
            {
                <div class="mb-3">
                    <h6>Créatures</h6>
                    <BestioleItemList Items=@FilteredBestioles />
                </div>
            }
            @if (FilteredLieux.Any())
            {
                <div class="mb-3">
                    <h6>Lieux</h6>
                    <LieuItemList Items=@FilteredLieux />
                </div>
            }
        </div>
    }
</div>
@code {
    [Parameter] public string Text { get; set; } = "";
        
    private IEnumerable<CarriereDto> AllCarrieres { get; set; } = new List<CarriereDto>();
    private IEnumerable<AptitudeDto> AllAptitudes { get; set; } = new List<AptitudeDto>();
    private IEnumerable<BestioleDto> AllBestioles { get; set; } = new List<BestioleDto>();
    private IEnumerable<LieuDto> AllLieux { get; set; } = new List<LieuDto>();

    private string _searchText = "";

    [Inject] private CarrieresService CarrieresService { get; set; } = null!;
    [Inject] private AptitudesService AptitudesService { get; set; } = null!;
    [Inject] private BestiolesService BestiolesService { get; set; } = null!;
    [Inject] private LieuxService LieuxService { get; set; } = null!;
        
    protected override void OnInitialized()
    {
        AllCarrieres = CarrieresService.AllCarrieres;
        AllAptitudes = AptitudesService.AllAptitudes;
        AllBestioles = BestiolesService.AllBestioles;
        AllLieux = LieuxService.AllLieux;
    }

    protected override void OnParametersSet()
    {
        _searchText = Text;
    }

    private bool ResultFound => FilteredCarrieres.Any() || FilteredAptitudes.Any() || FilteredBestioles.Any() || FilteredLieux.Any();

    private CarriereDto[] FilteredCarrieres => _searchText.Length < 3
        ? Array.Empty<CarriereDto>()
        : CarrieresService.Recherche(_searchText);
    
    private AptitudeDto[] FilteredAptitudes => _searchText.Length < 3
        ?  Array.Empty<AptitudeDto>()
        : AptitudesService.RechercheAptitudes(_searchText);

    private BestioleDto[] FilteredBestioles => _searchText.Length < 3
        ?  Array.Empty<BestioleDto>()
        : BestiolesService.Recherche(_searchText);

    private LieuDto[] FilteredLieux => _searchText.Length < 3
        ?  Array.Empty<LieuDto>()
        : LieuxService.Recherche(_searchText);

    private void ClearSearch()
    {
        _searchText = "";
    }
}