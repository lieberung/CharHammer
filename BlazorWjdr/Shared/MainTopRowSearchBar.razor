@using Microsoft.AspNetCore.Components
@using System.Net.Mime
@using BlazorWjdr.Models
@using BlazorWjdr.Services
@using BlazorWjdr.Components.Aptitude
@using BlazorWjdr.Components.Bestiole
@using BlazorWjdr.Components.Carriere

<div class="header-menu">
    <div class="btn-group" >
        <div class="text-center">
            <input class="dropdown-toggle border-4 w-2/3 rounded m-6 p-6 h-8"
                   @bind-value="_searchText"
                   @bind-value:event="oninput"
                   placeholder="Recherche..."
                   style="width:256px;"/>
            <span class="oi oi-magnifying-glass" aria-hidden="true" style="color:#5e1a05; font-size:1.3em; top:5px;"></span>
        </div>
        @if (_searchText.Length > 2 && ResultFound)
        {
            <div class="header-menu-list dropdown-menu show p-2" @onclick="ClearSearch">

                @if (FilteredCarrieres.Any())
                {
                    <div class="mb-3">
                        <h6 class="card-title">Carrières</h6>
                        <CarriereItemList Items="@FilteredCarrieres" ItemClass=""/>
                    </div>
                }

                @if (FilteredAptitudes.Any(a => a.EstUneCompetence))
                {
                    <div class="mb-3">
                        <h6 class="card-title">Compétences</h6>
                        <AptitudeItemList Items="@FilteredAptitudes.Where(a => a.EstUneCompetence).ToArray()" PasDeTooltip="@true"/>
                    </div>
                }
                
                @if (FilteredAptitudes.Any(a => a.EstUnTalent))
                {
                    <div class="mb-3">
                        <h6 class="card-title">Talents</h6>
                        <AptitudeItemList Items="@FilteredAptitudes.Where(a => a.EstUnTalent).ToArray()" PasDeTooltip="@true"/>
                    </div>
                }
                
                @if (FilteredAptitudes.Any(a => a.EstUnTrait))
                {
                    <div class="mb-3">
                        <h6 class="card-title">Traits</h6>
                        <AptitudeItemList Items="@FilteredAptitudes.Where(a => a.EstUnTrait).ToArray()" PasDeTooltip="@true"/>
                    </div>
                }
                
                @if (FilteredBestioles.Any())
                {
                    <div class="mb-3">
                        <h6 class="card-title">Créatures</h6>
                        <BestioleItemList Items="@FilteredBestioles" ItemClass=""/>
                    </div>
                }

            </div>
        }
    </div>
</div>


@code {
    private IEnumerable<CarriereDto> AllCarrieres { get; set; } = new List<CarriereDto>();
    private IEnumerable<AptitudeDto> AllAptitudes { get; set; } = new List<AptitudeDto>();
    private IEnumerable<BestioleDto> AllBestioles { get; set; } = new List<BestioleDto>();

    [Parameter]
    public string Text { get; set; } = "";
        
    private string _searchText = "";

    [Inject] private CarrieresService CarrieresService { get; set; } = null!;
    [Inject] private AptitudesService AptitudesService { get; set; } = null!;
    [Inject] private BestiolesService BestiolesService { get; set; } = null!;
        
    protected override void OnInitialized()
    {
        AllCarrieres = CarrieresService.AllCarrieres;
        AllAptitudes = AptitudesService.AllAptitudes;
        AllBestioles = BestiolesService.AllBestioles;
    }

    protected override void OnParametersSet()
    {
        _searchText = Text;
        base.OnParametersSet();
    }

    private bool ResultFound => FilteredCarrieres.Any() || FilteredAptitudes.Any() || FilteredBestioles.Any();

    private CarriereDto[] FilteredCarrieres => _searchText.Length < 3
        ? Array.Empty<CarriereDto>()
        : CarrieresService.Recherche(_searchText);
    
    private AptitudeDto[] FilteredAptitudes => _searchText.Length < 3
        ?  Array.Empty<AptitudeDto>()
        : AptitudesService.RechercheAptitudes(_searchText);

    private BestioleDto[] FilteredBestioles => _searchText.Length < 3
        ?  Array.Empty<BestioleDto>()
        : BestiolesService.Recherche(_searchText);

    private void ClearSearch()
    {
        _searchText = "";
    }

}