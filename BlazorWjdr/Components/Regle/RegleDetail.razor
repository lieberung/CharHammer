@using BlazorWjdr.Models
@using BlazorWjdr.Components.Bestiole
@using BlazorWjdr.Components.Carriere
@using BlazorWjdr.Components.Competence
@using BlazorWjdr.Components.Talent
@using BlazorWjdr.Components.Trait
@using BlazorWjdr.Components.Table

@if (MasquerTitre == false && !string.IsNullOrWhiteSpace(Item.Titre))
{
    <h4 class="card-title">@Item.Titre</h4>
}
@if (Item.Html) {
    @((MarkupString)Item.Regle)
} else {
    <CardParagraphes Text="@Item.Regle"></CardParagraphes>
}
@if (Item.Competences.Any())
{
    <CompetenceItemList Items="@Item.Competences" ItemsChoix="@Item.ChoixCompetences.ToArray()"/>
}
@if (Item.Talents.Any())
{
    <TalentItemList Items="@Item.Talents" ItemsChoix="@Item.ChoixTalents.ToArray()"/>
}
@if (Item.Traits.Any())
{
    <TraitItemList Items="@Item.Traits"/>
}

@if (Item.Bestioles.Any())
{
    <p class="card-text">
        <table class="table">
            <tbody>
            @foreach (var bestiole in Item.Bestioles)
            {
                <BestioleRow Item="@bestiole"/>
            }
            </tbody>
        </table>
    </p>
}

@if (Item.Carrieres.Any())
{
    <h5 class="card-title">Carrières liées</h5>
    <p class="card-text">
        <CarriereItemList Items="@Item.Carrieres"/>
    </p>
}

@if (MasquerTables == false)
{
    @foreach (var table in Item.Tables)
    {
        <p class="card-text">
            <TableDetail Item="@table"/>
        </p>
    }
}

@foreach (var sousRegle in Item.SousRegles)
{
    <RegleDetail Item="@sousRegle"/>
}

@code {
    [Parameter]
    public RegleDto Item { get; set; } = null!;
    [Parameter]
    public bool MasquerTitre { get; set; }
    [Parameter]
    public bool MasquerTables { get; set; }
}