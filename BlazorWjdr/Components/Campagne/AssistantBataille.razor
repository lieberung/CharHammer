@using BlazorWjdr.Components.Bestiole
@using BlazorWjdr.Models
@using BlazorWjdr.Services

@inject AppState _appState
@implements IDisposable

@code{
    [Parameter] public CombattantDto[] Protagonistes { get; set; } = null!;

    protected override void OnInitialized() => _appState.OnChange += StateHasChanged;
    public void Dispose() => _appState.OnChange -= StateHasChanged;
}
<table class="table">
    <thead>
    <tr>
        <th class="tgroupe"></th>
        <th class="tgroupe pl-2">Combattant</th>
        <th class="tgroupe pl-2">Adversaire</th>
        <th class="tgroupe pl-2">Compétences</th>
        <th class="tgroupe pl-2" style="text-align:center;">CC</th>
        <th class="tgroupe pl-2" style="text-align:center;">BF</th>
        <th class="tgroupe pl-2" style="text-align:center;">BE</th>
        <th class="tgroupe pl-2">Avantage</th>
        <th class="tgroupe pl-2">Blessures</th>
        <th class="tgroupe pl-2">Protections</th>
        <th class="tgroupe pl-2">Aptitudes</th>
    </tr>
    </thead>
    <tbody class="alternate-color-dark">
    @foreach (var combattant in Protagonistes)
    {
        <CombattantRow Item="@combattant" Adversaires="@Protagonistes.Where(p => p.Ennemi != combattant.Ennemi).ToArray()"/>
    }
    </tbody>
</table>