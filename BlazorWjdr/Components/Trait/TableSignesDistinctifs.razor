@using BlazorWjdr.Services
@using BlazorWjdr.Models

@inject TraitsService _traitsService

<table>
    <tbody>
    @for (var i = 0; i < _split; i++)
    {
        <tr>
            <td>
                <TraitItem Item="@_col1Lines[i]"/>
            </td>
            <td>
                @if (i < _col2Lines.Count)
                {
                    <TraitItem Item="@_col2Lines[i]"/>
                }
            </td>
            <td>
                @if (i < _col3Lines.Count)
                {
                    <TraitItem Item="@_col3Lines[i]"/>
                }
            </td>
        </tr>
    }
    </tbody>
</table>
@code {
    private int _split;
    
    private List<TraitDto> _allLines = null!;
    private List<TraitDto> _col1Lines = new ();
    private List<TraitDto> _col2Lines = new ();
    private List<TraitDto> _col3Lines = new ();

    protected override void OnParametersSet()
    {
        _allLines = _traitsService.SignesDistinctifs;

        var nb = _allLines.Count / 3;
        if (_allLines.Count % 3 != 0)
            nb++;
        _split = nb;

        _col1Lines = new ();
        _col2Lines = new ();
        _col3Lines = new ();
        
        for (var i = 0; i < _allLines.Count; i++)
        {
            if (i < _split)
                _col1Lines.Add(_allLines[i]);
            else if (i < (_split * 2))
                _col2Lines.Add(_allLines[i]);
            else
                _col3Lines.Add(_allLines[i]);
        }
        
        base.OnParametersSet();
    }
}