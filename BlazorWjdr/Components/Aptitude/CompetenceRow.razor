@using BlazorWjdr.Components.Carriere
@using BlazorWjdr.Components.Aptitude
@using BlazorWjdr.Models
@using BlazorWjdr.Services
@using BlazorWjdr.Shared.Oi

<tr>
    <td>
        @if (_carrieresLiees.Any())
        {
            <span class="btn btn-primary btn-item-action table-btn mr-1" @onclick="_ => AfficherCarrieres = !AfficherCarrieres">
                <OiIcon Icon="badge"/>
            </span>
        }
    </td>
    <td>
        @if (Item.SousElements.Any())
        {
            <span class="btn btn-primary btn-item-action table-btn mr-1" @onclick="_ => AfficherSousElements = !AfficherSousElements">
                <OiIcon Icon="layers"/>
            </span>
        }
    </td>
    <td>
        @if (Item.Parent != null)
        {
            <SousElement/>
        }
        <AptitudeItem Item="Item"/>
    </td>
    <td>@Item.CaracteristiqueAssociee</td>
    <td><CheckedIfTrue Condition="@Item.EstUneCompetenceDeBase"/> </td>
    <td><AptitudeItemList Items="@Item.TalentsLies.ToArray()"/></td>
</tr>
@if (AfficherCarrieres && _carrieresLiees.Any())
{
    <tr class="zone-detail">
        <td colspan="6" class="p-3">
            <CarriereItemList Items="_carrieresLiees"/>
        </td>
    </tr>
}
@if (AfficherSousElements && Item.SousElements.Any())
{
    @foreach (var sousElement in Item.SousElements)
    {
        <CompetenceRow Item="@sousElement" />
    }
}

@code{
    [Inject] private CarrieresService CarrieresService { get; set; } = null!;

    [Parameter] public AptitudeDto Item { get; set; } = null!;
    private bool AfficherSousElements { get; set; } = false;
    private bool AfficherCarrieres { get; set; } = false;
    
    private CarriereDto[] _carrieresLiees = null!;

    protected override void OnParametersSet()
    {
        _carrieresLiees = CarrieresService.GetCarrieresProposant(Item);
        base.OnParametersSet();
    }
}