@using BlazorWjdr.Models
@using BlazorWjdr.Components.Reference
@using BlazorWjdr.Components.Regle

@if (Item.Origines.Any())
{
    <p class="card-text">
        <CarriereAvancement Origines="@Item.Origines"/>
    </p>
}
<img class="career-img" src="@Item.Image" alt="@Item.Nom" style="max-width: 300px; max-height: 450px;"/>

<div style="min-height:400px;">
@foreach (var paragraphe in _paragraphes)
{
    <p class="card-text pr-3" style="text-align:justify;">
        @paragraphe
    </p>
}
</div>
@if (AfficherCitations && Item.Ambiance.Any())
{
    @foreach (var citation in Item.Ambiance)
    {
        <p class="card-text p-2" style="clear:both;">
            <CarriereCitations Citation="@citation"/>
        </p>
    }
}
@if (Item.SourceLivre != null || !string.IsNullOrWhiteSpace(Item.Source))
{
    <ReferenceItem Item="@Item.SourceLivre" Page="@Item.Source"/>
}
@if (Item.SousElements.Any())
{
    <h5 class="card-title mt-4">Variantes</h5>
    <p class="card-text">
        <CarriereItemList Items="@Item.SousElements.ToArray()"/>
    </p>
}
@code{
    [Parameter]
    public CarriereDto Item { get; set; } = null!;
    [Parameter]
    public bool AfficherCitations { get; set; }
    
    private string[] _paragraphes = null!;

    protected override void OnParametersSet()
    {
        _paragraphes = Item.Description
            .Replace('\r', '\n')
            .Replace("\n\n", "\n")
            .Split('\n');
        base.OnParametersSet();
    }
}