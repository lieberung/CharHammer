@using BlazorWjdr.Services
@using BlazorWjdr.Models
@using BlazorWjdr.Components.Reference

@inject TableDesCarrieresInitialesService _tableDesCarrieresInitialesService

<table>
    <tbody>
    @for (var i = 0; i < _split; i++)
    {
        <tr>
            @if ((i != _split - 1) && (i == 0 || _col1Lines[i - 1].Carriere.Groupe != _col1Lines[i].Carriere.Groupe))
            {
                <CarriereInitialeGroupeCol Groupe="@_col1Lines[i].Carriere.Groupe"/>
                <CarriereInitialeRow Item="@_col1Lines[i]" BorderTop="@true"/>
            }
            else
            {
                <td style="width:100px;"></td>
                <CarriereInitialeRow Item="@_col1Lines[i]"/>
            }
            @if (i < _col2Lines.Count)
            {
                if ((i != _split - 1) && (i == 0 || _col2Lines[i - 1].Carriere.Groupe != _col2Lines[i].Carriere.Groupe))
                {
                    <CarriereInitialeGroupeCol Groupe="@_col2Lines[i].Carriere.Groupe"/>
                    <CarriereInitialeRow Item="@_col2Lines[i]" BorderTop="@true"/>
                }
                else
                {
                    <td style="width:100px;"></td>
                    <CarriereInitialeRow Item="@_col2Lines[i]"/>
                }
                
            }
            @if (i < _col3Lines.Count)
            {
                if ((i != _split - 1) && (i == 0 || _col3Lines[i - 1].Carriere.Groupe != _col3Lines[i].Carriere.Groupe))
                {
                    <CarriereInitialeGroupeCol Groupe="@_col3Lines[i].Carriere.Groupe"/>
                    <CarriereInitialeRow Item="@_col3Lines[i]" BorderTop="@true"/>
                }
                else
                {
                    <td style="width:100px;"></td>
                    <CarriereInitialeRow Item="@_col3Lines[i]"/>
                }
            }
        </tr>
    }
    </tbody>
</table>
@code {
    [Parameter]
    public string RaceId { get; set; } = null!;

    private int _split;
    
    private List<LigneDeCarriereInitialeDto> _allLines = null!;
    private List<LigneDeCarriereInitialeDto> _col1Lines = new ();
    private List<LigneDeCarriereInitialeDto> _col2Lines = new ();
    private List<LigneDeCarriereInitialeDto> _col3Lines = new ();

    protected override void OnParametersSet()
    {
        _allLines = _tableDesCarrieresInitialesService.AllLignes[int.Parse(RaceId)];

        var nb = _allLines.Count / 3;
        if (_allLines.Count % 3 != 0)
            nb++;
        _split = nb;

        _col1Lines = new ();
        _col2Lines = new ();
        _col3Lines = new ();
        
        for (var i = 0; i < _allLines.Count; i++)
        {
            if (i < _split)
                _col1Lines.Add(_allLines[i]);
            else if (i < (_split * 2))
                _col2Lines.Add(_allLines[i]);
            else
                _col3Lines.Add(_allLines[i]);
        }
        
        
        base.OnParametersSet();
    }
}